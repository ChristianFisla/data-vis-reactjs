{"ast":null,"code":"// Copyright 2021-2023 Observable, Inc.\n// Released under the ISC license.\n// https://observablehq.com/@d3/bubble-chart\nfunction BubbleChart(data, {\n  name = ([x]) => x,\n  // alias for label\n  label = name,\n  // given d in data, returns text to display on the bubble\n  value = ([, y]) => y,\n  // given d in data, returns a quantitative size\n  group,\n  // given d in data, returns a categorical value for color\n  title,\n  // given d in data, returns text to show on hover\n  link,\n  // given a node d, its link (if any)\n  linkTarget = \"_blank\",\n  // the target attribute for links, if any\n  width = 640,\n  // outer width, in pixels\n  height = width,\n  // outer height, in pixels\n  padding = 3,\n  // padding between circles\n  margin = 1,\n  // default margins\n  marginTop = margin,\n  // top margin, in pixels\n  marginRight = margin,\n  // right margin, in pixels\n  marginBottom = margin,\n  // bottom margin, in pixels\n  marginLeft = margin,\n  // left margin, in pixels\n  groups,\n  // array of group names (the domain of the color scale)\n  colors = d3.schemeTableau10,\n  // an array of colors (for groups)\n  fill = \"#ccc\",\n  // a static fill color, if no group channel is specified\n  fillOpacity = 0.7,\n  // the fill opacity of the bubbles\n  stroke,\n  // a static stroke around the bubbles\n  strokeWidth,\n  // the stroke width around the bubbles, if any\n  strokeOpacity // the stroke opacity around the bubbles, if any\n} = {}) {\n  // Compute the values.\n  const D = d3.map(data, d => d);\n  const V = d3.map(data, value);\n  const G = group == null ? null : d3.map(data, group);\n  const I = d3.range(V.length).filter(i => V[i] > 0);\n\n  // Unique the groups.\n  if (G && groups === undefined) groups = I.map(i => G[i]);\n  groups = G && new d3.InternSet(groups);\n\n  // Construct scales.\n  const color = G && d3.scaleOrdinal(groups, colors);\n\n  // Compute labels and titles.\n  const L = label == null ? null : d3.map(data, label);\n  const T = title === undefined ? L : title == null ? null : d3.map(data, title);\n\n  // Compute layout: create a 1-deep hierarchy, and pack it.\n  const root = d3.pack().size([width - marginLeft - marginRight, height - marginTop - marginBottom]).padding(padding)(d3.hierarchy({\n    children: I\n  }).sum(i => V[i]));\n  const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [-marginLeft, -marginTop, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").attr(\"fill\", \"currentColor\").attr(\"font-size\", 10).attr(\"font-family\", \"sans-serif\").attr(\"text-anchor\", \"middle\");\n  const leaf = svg.selectAll(\"a\").data(root.leaves()).join(\"a\").attr(\"xlink:href\", link == null ? null : (d, i) => link(D[d.data], i, data)).attr(\"target\", link == null ? null : linkTarget).attr(\"transform\", d => `translate(${d.x},${d.y})`);\n  leaf.append(\"circle\").attr(\"stroke\", stroke).attr(\"stroke-width\", strokeWidth).attr(\"stroke-opacity\", strokeOpacity).attr(\"fill\", G ? d => color(G[d.data]) : fill == null ? \"none\" : fill).attr(\"fill-opacity\", fillOpacity).attr(\"r\", d => d.r);\n  if (T) leaf.append(\"title\").text(d => T[d.data]);\n  if (L) {\n    // A unique identifier for clip paths (to avoid conflicts).\n    const uid = `O-${Math.random().toString(16).slice(2)}`;\n    leaf.append(\"clipPath\").attr(\"id\", d => `${uid}-clip-${d.data}`).append(\"circle\").attr(\"r\", d => d.r);\n    leaf.append(\"text\").attr(\"clip-path\", d => `url(${new URL(`#${uid}-clip-${d.data}`, location)})`).selectAll(\"tspan\").data(d => `${L[d.data]}`.split(/\\n/g)).join(\"tspan\").attr(\"x\", 0).attr(\"y\", (d, i, D) => `${i - D.length / 2 + 0.85}em`).attr(\"fill-opacity\", (d, i, D) => i === D.length - 1 ? 0.7 : null).text(d => d);\n  }\n  return Object.assign(svg.node(), {\n    scales: {\n      color\n    }\n  });\n}\n_c = BubbleChart;\nvar _c;\n$RefreshReg$(_c, \"BubbleChart\");","map":{"version":3,"names":["BubbleChart","data","name","x","label","value","y","group","title","link","linkTarget","width","height","padding","margin","marginTop","marginRight","marginBottom","marginLeft","groups","colors","d3","schemeTableau10","fill","fillOpacity","stroke","strokeWidth","strokeOpacity","D","map","d","V","G","I","range","length","filter","i","undefined","InternSet","color","scaleOrdinal","L","T","root","pack","size","hierarchy","children","sum","svg","create","attr","leaf","selectAll","leaves","join","append","r","text","uid","Math","random","toString","slice","URL","location","split","Object","assign","node","scales","_c","$RefreshReg$"],"sources":["/Users/cfisla/Documents/React/data-vis-reactjs/src/components/bubblechart.js"],"sourcesContent":["// Copyright 2021-2023 Observable, Inc.\n// Released under the ISC license.\n// https://observablehq.com/@d3/bubble-chart\nfunction BubbleChart(data, {\n    name = ([x]) => x, // alias for label\n    label = name, // given d in data, returns text to display on the bubble\n    value = ([, y]) => y, // given d in data, returns a quantitative size\n    group, // given d in data, returns a categorical value for color\n    title, // given d in data, returns text to show on hover\n    link, // given a node d, its link (if any)\n    linkTarget = \"_blank\", // the target attribute for links, if any\n    width = 640, // outer width, in pixels\n    height = width, // outer height, in pixels\n    padding = 3, // padding between circles\n    margin = 1, // default margins\n    marginTop = margin, // top margin, in pixels\n    marginRight = margin, // right margin, in pixels\n    marginBottom = margin, // bottom margin, in pixels\n    marginLeft = margin, // left margin, in pixels\n    groups, // array of group names (the domain of the color scale)\n    colors = d3.schemeTableau10, // an array of colors (for groups)\n    fill = \"#ccc\", // a static fill color, if no group channel is specified\n    fillOpacity = 0.7, // the fill opacity of the bubbles\n    stroke, // a static stroke around the bubbles\n    strokeWidth, // the stroke width around the bubbles, if any\n    strokeOpacity, // the stroke opacity around the bubbles, if any\n  } = {}) {\n    // Compute the values.\n    const D = d3.map(data, d => d);\n    const V = d3.map(data, value);\n    const G = group == null ? null : d3.map(data, group);\n    const I = d3.range(V.length).filter(i => V[i] > 0);\n  \n    // Unique the groups.\n    if (G && groups === undefined) groups = I.map(i => G[i]);\n    groups = G && new d3.InternSet(groups);\n  \n    // Construct scales.\n    const color = G && d3.scaleOrdinal(groups, colors);\n  \n    // Compute labels and titles.\n    const L = label == null ? null : d3.map(data, label);\n    const T = title === undefined ? L : title == null ? null : d3.map(data, title);\n  \n    // Compute layout: create a 1-deep hierarchy, and pack it.\n    const root = d3.pack()\n        .size([width - marginLeft - marginRight, height - marginTop - marginBottom])\n        .padding(padding)\n      (d3.hierarchy({children: I})\n        .sum(i => V[i]));\n  \n    const svg = d3.create(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"viewBox\", [-marginLeft, -marginTop, width, height])\n        .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", \"middle\");\n  \n    const leaf = svg.selectAll(\"a\")\n      .data(root.leaves())\n      .join(\"a\")\n        .attr(\"xlink:href\", link == null ? null : (d, i) => link(D[d.data], i, data))\n        .attr(\"target\", link == null ? null : linkTarget)\n        .attr(\"transform\", d => `translate(${d.x},${d.y})`);\n  \n    leaf.append(\"circle\")\n        .attr(\"stroke\", stroke)\n        .attr(\"stroke-width\", strokeWidth)\n        .attr(\"stroke-opacity\", strokeOpacity)\n        .attr(\"fill\", G ? d => color(G[d.data]) : fill == null ? \"none\" : fill)\n        .attr(\"fill-opacity\", fillOpacity)\n        .attr(\"r\", d => d.r);\n  \n    if (T) leaf.append(\"title\")\n        .text(d => T[d.data]);\n  \n    if (L) {\n      // A unique identifier for clip paths (to avoid conflicts).\n      const uid = `O-${Math.random().toString(16).slice(2)}`;\n  \n      leaf.append(\"clipPath\")\n          .attr(\"id\", d => `${uid}-clip-${d.data}`)\n        .append(\"circle\")\n          .attr(\"r\", d => d.r);\n  \n      leaf.append(\"text\")\n          .attr(\"clip-path\", d => `url(${new URL(`#${uid}-clip-${d.data}`, location)})`)\n        .selectAll(\"tspan\")\n        .data(d => `${L[d.data]}`.split(/\\n/g))\n        .join(\"tspan\")\n          .attr(\"x\", 0)\n          .attr(\"y\", (d, i, D) => `${i - D.length / 2 + 0.85}em`)\n          .attr(\"fill-opacity\", (d, i, D) => i === D.length - 1 ? 0.7 : null)\n          .text(d => d);\n    }\n  \n    return Object.assign(svg.node(), {scales: {color}});\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}